<!-- 
To run files from the command line:
		mvn clean
		mvn install
		mvn exec:java -e -Dexec.mainClass="main.MAIN_Run"
		with command-line arguments:
		mvn exec:java -e -Dexec.mainClass="main.MAIN_Run" -Dexec.args="-Xmx37g"
		to change memory usage:
		export MAVEN_OPTS="-Xmx37g"
To update the classpath settings for Eclipse:
		mvn eclipse:clean
		mvn eclipse:eclipse
	-->

	<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
		<modelVersion>4.0.0</modelVersion>
		<groupId>QWOP_SaveLoad</groupId>
		<artifactId>QWOP_SaveLoad</artifactId>
		<version>1.0</version>

		<properties>
			<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		</properties>
		
		<build>
			<!-- Define main location of source code. -->
			<sourceDirectory>src</sourceDirectory>
			<resources>
				<resource>
					<directory>src</directory>
					<excludes>
						<exclude>**/*.java</exclude>
					</excludes>
				</resource>
			</resources>

			<plugins>
				<!-- Lets maven compile the source code. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.7.0</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>

				<!-- Needed to import the local .jar file for box2d -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
					<executions>
						<execution>
							<id>install-external</id>
							<phase>clean</phase>
							<configuration>
								<file>${project.basedir}/jbox2d.jar</file>
								<repositoryLayout>default</repositoryLayout>
								<groupId>org.jbox2d</groupId>
								<artifactId>jbox2d</artifactId>
								<version>0.0.1</version>
								<packaging>jar</packaging>
								<generatePom>true</generatePom>
							</configuration>
							<goals>
								<goal>install-file</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Defines how/what to run when executing code. -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.2</version>
				</plugin>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
							<configuration>
								<archive>
									<manifest>
										<mainClass>
											main.MAIN_Search_Full
										</mainClass>
									</manifest>
								</archive>
								<descriptors>
									<descriptor>${project.basedir}/jar-with-dependencies.xml</descriptor>
									<descriptor>${project.basedir}/deploy.xml</descriptor>
								</descriptors>
							</configuration>
						</execution>
					</executions>
				</plugin>

			</plugins>
		</build>
		<repositories>
			<repository>
				<id>jspresso-repository</id>
				<url>http://repository.jspresso.org/maven2</url>
				<releases>
					<enabled>true</enabled>
				</releases>
				<snapshots>
					<enabled>false</enabled>
				</snapshots>
			</repository>
		</repositories>

		<!-- Code dependencies automagically imported from various repositories. -->
		<dependencies>

			<!-- Linear algebra -->
			<dependency>
				<groupId>org.jblas</groupId>
				<artifactId>jblas</artifactId>
				<version>1.2.4</version>
			</dependency>

			<!-- Plotting -->
			<dependency>
				<groupId>org.jfree</groupId>
				<artifactId>jfreechart</artifactId>
				<version>1.0.19</version>
			</dependency>

			<!-- Lets java call C libraries, mostly (only?) for OpenGL -->
			<dependency>
				<groupId>org.jogamp.gluegen</groupId>
				<artifactId>gluegen-rt-main</artifactId>
				<version>2.3.2</version>
			</dependency>

			<!-- OpenGL 3D graphics rendering. Note that this is a very old version because I'm too lazy to learn the whole shader pipeline. -->
			<dependency>
				<groupId>org.jogamp.jogl</groupId>
				<artifactId>jogl-all-main</artifactId>
				<version>2.3.2</version>
			</dependency>

			<!-- Convenient library for dealing with vectors. TODO: replace this with just jblas? -->
			<dependency>
				<groupId>javax.vecmath</groupId>
				<artifactId>vecmath</artifactId>
				<version>1.5.2</version>
			</dependency>

			<!-- Create data binary files which can be read by different programming languages. -->
			<dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protobuf-java</artifactId>
				<version>3.1.0</version>
			</dependency>

			<!-- Lots of various utility functions. -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>23.0</version>
			</dependency>

			<!-- Running neural network models. -->
			<dependency>
				<groupId>org.tensorflow</groupId>
				<artifactId>tensorflow</artifactId>
				<version>1.4.0</version>
			</dependency>

			<dependency>
				<groupId>org.jbox2d</groupId>
				<artifactId>jbox2d</artifactId>
				<version>0.0.1</version>
			</dependency> <!--			2D physics engine; old version similar to that in QWOP. Hosted locally. -->
			<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-pool2 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-pool2</artifactId>
				<version>2.5.0</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.apache.hadoop/hadoop-common -->
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-common</artifactId>
				<version>3.1.0</version>
				<scope>provided</scope>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-io -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-io</artifactId>
				<version>1.3.2</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/chrriis/dj-nativeswing -->
			<dependency>
				<groupId>chrriis</groupId>
				<artifactId>dj-nativeswing</artifactId>
				<version>1.0.2.20120308</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.eclipse.swt/org.eclipse.swt.gtk.linux.x86_64 -->
			<dependency>
				<groupId>org.eclipse.swt</groupId>
				<artifactId>org.eclipse.swt.gtk.linux.x86_64</artifactId>
				<version>4.3</version>
			</dependency>

<!-- https://mvnrepository.com/artifact/org.eclipse.swt/org.eclipse.swt.cocoa.macosx.x86_64 -->
<!-- <dependency>
    <groupId>org.eclipse.swt</groupId>
    <artifactId>org.eclipse.swt.cocoa.macosx.x86_64</artifactId>
    <version>4.3</version>
</dependency> -->

			<!-- https://mvnrepository.com/artifact/net.java.dev.jna/jna -->
			<dependency>
				<groupId>net.java.dev.jna</groupId>
				<artifactId>jna</artifactId>
				<version>4.5.1</version>
			</dependency>

			
		</dependencies>
	</project>
