<!-- 
To run files from the command line:
		mvn clean
		mvn install
		mvn exec:java -e -Dexec.mainClass="goals.MAIN_Run"
		with command-line arguments:
		mvn exec:java -e -Dexec.mainClass="goals.MAIN_Run" -Dexec.args="-Xmx37g"
		to change memory usage:
		export MAVEN_OPTS="-Xmx37g"
To update the classpath settings for Eclipse:
		mvn eclipse:clean
		mvn eclipse:eclipse
	-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>qwop-controls</groupId>
    <artifactId>qwop-controls</artifactId>
    <version>1.0</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <build>
        <!-- Define goals location of source code. -->
        <resources>
            <resource>
                <directory>src</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>
            <!-- Lets maven compile the source code. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!-- Defines how/what to run when executing code. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
            </plugin>

            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <excludes>
                        <exclude>**/*.TFRecord</exclude>
                        <exclude>**/*.tfrecord</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>
                                goals.tree_search.MAIN_Search_Full
                            </mainClass>
                        </manifest>
                    </archive>
                    <descriptors>
                        <descriptor>jar-with-dependencies.xml</descriptor>
                        <descriptor>deploy.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Unit test helper plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.1</version>
                <configuration>
                    <parallel>methods</parallel>
                    <threadCount>4</threadCount>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.0.1</version>
                <configuration>
                    <destDir>.</destDir>
                    <reportOutputDirectory>${basedir}/docs</reportOutputDirectory>
                    <failOnError>false</failOnError>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version>
            </plugin>
            <plugin>
                <groupId>org.jsweet</groupId>
                <artifactId>jsweet-maven-plugin</artifactId>
                <version>2.2.0-SNAPSHOT</version>
                <configuration>
                    <verbose>true</verbose>
                    <includes>src/java/main/game/GameSingleThread.java</includes>
                    <tsOut>target/ts</tsOut>
                    <outDir>target/js</outDir>
                    <candiesJsOut>webapp</candiesJsOut>
                    <targetVersion>ES6</targetVersion>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-js</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>jsweet</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <pluginRepositories>
        <pluginRepository>
            <id>jsweet-plugins-release</id>
            <name>plugins-release</name>
            <url>http://repository.jsweet.org/artifactory/plugins-release-local</url>
        </pluginRepository>
        <pluginRepository>
            <snapshots />
            <id>jsweet-plugins-snapshots</id>
            <name>plugins-snapshot</name>
            <url>http://repository.jsweet.org/artifactory/plugins-snapshot-local</url>
        </pluginRepository>
    </pluginRepositories>

    <repositories>
        <repository>
            <id>jspresso-repository</id>
            <url>http://repository.jspresso.org/maven2</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>swt-repo</id>
            <url>https://raw.githubusercontent.com/maven-eclipse/swt-repo/master/</url>
        </repository>
        <repository>
            <id>dcm4che</id>
            <url>http://www.dcm4che.org/maven2/</url>
        </repository>
    </repositories>

    <!-- Code dependencies automagically imported from various repositories. -->
    <dependencies>

        <!-- Linear algebra -->
        <dependency>
            <groupId>org.jblas</groupId>
            <artifactId>jblas</artifactId>
            <version>1.2.4</version>
        </dependency>

        <!-- Plotting -->
        <!-- https://mvnrepository.com/artifact/org.jfree/jfreechart -->
        <dependency>
            <groupId>org.jfree</groupId>
            <artifactId>jfreechart</artifactId>
            <version>1.0.19</version>
        </dependency>

        <!-- Lets java call C libraries, mostly (only?) for OpenGL -->
        <dependency>
            <groupId>org.jogamp.gluegen</groupId>
            <artifactId>gluegen-rt-main</artifactId>
            <version>2.3.2</version>
        </dependency>

        <!-- OpenGL 3D graphics rendering. Note that this is a very old version because I'm too lazy to learn the whole shader pipeline. -->
        <dependency>
            <groupId>org.jogamp.jogl</groupId>
            <artifactId>jogl-all-main</artifactId>
            <version>2.3.2</version>
        </dependency>

        <!-- Convenient library for dealing with vectors. TODO: replace this with just jblas? -->
        <dependency>
            <groupId>javax.vecmath</groupId>
            <artifactId>vecmath</artifactId>
            <version>1.5.2</version>
        </dependency>

        <!-- Create data binary files which can be read by different programming languages. -->
        <!-- https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java -->
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>3.6.1</version>
        </dependency>


        <!-- Lots of various utility functions. -->
        <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>26.0-jre</version>
        </dependency>

        <!-- Running neural network models. -->
        <dependency>
            <groupId>org.tensorflow</groupId>
            <artifactId>tensorflow</artifactId>
            <version>1.12.0</version>
        </dependency>

        <!-- 2D physics engine; old version similar to that in QWOP. From local .jar. -->
        <dependency>
            <groupId>org.jbox2d</groupId>
            <artifactId>jbox2d</artifactId>
            <version>0.0.1</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/jbox2d.jar</systemPath>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-pool2 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
            <version>2.6.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.hadoop/hadoop-common -->
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>3.1.1</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/chrriis/dj-nativeswing -->
        <dependency>
            <groupId>chrriis</groupId>
            <artifactId>dj-nativeswing</artifactId>
            <version>1.0.2.20120308</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/net.java.dev.jna/jna -->
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
            <version>5.0.0</version>
        </dependency>

        <!-- Video capture -->
        <dependency>
            <groupId>org.jcodec</groupId>
            <artifactId>jcodec</artifactId>
            <version>0.2.2</version>
        </dependency>
        <dependency>
            <groupId>org.jcodec</groupId>
            <artifactId>jcodec-javase</artifactId>
            <version>0.2.2</version>
        </dependency>

        <!-- JUNIT Unit testing -->
        <!-- https://mvnrepository.com/artifact/junit/junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.9</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>RELEASE</version>
            <scope>compile</scope>
        </dependency>

        <!-- Class mocking for unit tests. -->
        <!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.23.0</version>
            <!--<scope>test</scope>-->
        </dependency>

        <dependency>
            <groupId>org.jsweet</groupId>
            <artifactId>jsweet-core</artifactId>
            <version>6-SNAPSHOT</version>
        </dependency>
    </dependencies>
</project>
